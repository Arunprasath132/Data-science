output$plot<-renderplot({
data<-histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
library(shinydashboard)
library(shiny)
ui<-dashboardPage(
dashboardHeader(title="Basic Dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard",tabname="dashboard",icon=icon("dashboard")),
menuItem("widgets",tabname="widgets",icon=icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName="dashboard",
fluidRow(
box(plotOutput("plot1",height=400)),
box(titile="controls",
sliderInput("slider","number of observation",1,1000,500)
)
)),
tabItem(tabName="widgets",
h2("widgets tab content"))
)
)
)
server<-function(input,output){
set.seed(122)
histdata<-rnorm(1000)
output$plot<-renderplot({
data<-histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
library(shinydashboard)
library(shiny)
ui<-dashboardPage(
dashboardHeader(title="Basic Dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard",tabname="dashboard",icon=icon("dashboard")),
menuItem("widgets",tabname="widgets",icon=icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName="dashboard",
fluidRow(
box(plotOutput("plot1",height=400)),
box(titile="controls",
sliderInput("slider","number of observation",1,1000,500)
)
)),
tabItem(tabName="widgets",
h2("widgets tab content"))
)
)
)
server<-function(input,output){
set.seed(122)
histdata<-rnorm(1000)
output$plot<-renderplot({
data<-histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui,server)
runApp('dashboard.R')
runApp('dashboard.R')
ui<-dashboardPage(
dashboardHeader(title="Basic Dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard",tabname="dashboard",icon=icon("dashboard")),
menuItem("widgets",tabname="widgets",icon=icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName="dashboard",
fluidRow(
box(plotOutput("plot1",height=400)),
box(titile="controls",
sliderInput("slider","number of observation",1,1000,500)
)
)),
tabItem(tabName="widgets",
h2("widgets tab content"))
)
)
)
runApp('dashboard.R')
runApp('dashboard.R')
runApp('dashboard.R')
runApp('dashboard.R')
install.packages("modeest")
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
diamin=mean(neo$Estimated.Diameter.maximum..m.)
print(diamin)
avgvelr=mean(neo$Vrelative..km.s.)
print(avgvelr)
avddist=mean(neo$CA.Distance.Minimum..au.)
print(avddist)
middist=median(neo$CA.Distance.Minimum..au.)
print(middist)
modemag=mfv(neo$H..mag.)
print(modemag)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
diamin=mean(neo$Estimated.Diameter.maximum..m.)
print(diamin)
avgvelr=mean(neo$Vrelative..km.s.)
print(avgvelr)
avddist=mean(neo$CA.Distance.Minimum..au.)
print(avddist)
middist=median(neo$CA.Distance.Minimum..au.)
print(middist)
modemag=mfv(neo$H..mag.)
print(modemag)
sdofvelocity=sd(neo$Vrelative..km.s.)
print(sdofvelocity)
varofvelocity=var(neo$Vrelative..km.s.)
print(varofvelocity)
range=max(neo$Vrelative..km.s.)
range=min(neo$Vrelative..km.s.)
print(range)
range=max(neo$Vrelative..km.s.)-min(neo$Vrelative..km.s.)
print(range)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
diamin=mean(neo$Estimated.Diameter.maximum..m.)
print(diamin)
avgvelr=mean(neo$Vrelative..km.s.)
print(avgvelr)
avddist=mean(neo$CA.Distance.Minimum..au.)
print(avddist)
middist=median(neo$CA.Distance.Minimum..au.)
print(middist)
modemag=mfv(neo$H..mag.)
print(modemag)
sdofvelocity=sd(neo$Vrelative..km.s.)
print(sdofvelocity)
varofvelocity=var(neo$Vrelative..km.s.)
print(varofvelocity)
range=max(neo$Vrelative..km.s.)-min(neo$Vrelative..km.s.)
print(range)
kurtosis(neo$CA.Distance.Minimum..au.)
kurtosis(neo$CA.Distance.Minimum..au.)
install.packages("moments")
library(moments)
kurtosis(neo$CA.Distance.Minimum..au.)
skewness(neo$V.infinity..km.s.)
library(moments)
kurtosis(neo$CA.Distance.Minimum..au.)
skewness(neo$V.infinity..km.s.)
brary(moments)
library(moments)
kurtosis(neo$CA.Distance.Minimum..au.)
skewness(neo$CA.Distance.Nominal..au.)
library(modeest)
neo=read.csv("C:\\Users\\Arun\\Documents\\neo.csv")
View(neo)
diamin=mean(neo$Estimated.Diameter.maximum..m.)
print(diamin)
avgvelr=mean(neo$Vrelative..km.s.)
print(avgvelr)
avddist=mean(neo$CA.Distance.Minimum..au.)
print(avddist)
middist=median(neo$CA.Distance.Minimum..au.)
print(middist)
modemag=mfv(neo$H..mag.)
print(modemag)
sdofvelocity=sd(neo$Vrelative..km.s.)
print(sdofvelocity)
varofvelocity=var(neo$Vrelative..km.s.)
print(varofvelocity)
range=max(neo$Vrelative..km.s.)-min(neo$Vrelative..km.s.)
print(range)
library(moments)
kurtosis(neo$CA.Distance.Minimum..au.)
skewness(neo$CA.Distance.Nominal..au.)
library(moments)
kurtosis(neo$CA.Distance.Minimum..au.)
skewness(neo$H..mag.)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
x=rnorm(100)
t.test(x,mu=5)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
x=rnorm(100)
t.test(x,mu=5)
y=rnorm(100)
t.test(x,y)
t.test(x,mu=5)
y=rnorm(100)
x=rnorm(100)
t.test(x,mu=5)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
str(data)
data$hypertension<-as.factor(data$hypertension)
data$heart_disease<-as.factor(data$heart_disease)
data$bmi<-as.numeric(data$bmi)
data$stroke<-as.factor(data$stroke)
str(data)
test1<-chisq.test(table(data$hypertension,data$heart_disease))
print(test1)
test2<-chisq.test(table(data$Residence_type,data$hypertension))
print(test2)
test3<-chisq.test(table(data$smoking_status,data$hypertension))
print(test3)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
str(data)
data$hypertension<-as.factor(data$hypertension)
data$heart_disease<-as.factor(data$heart_disease)
data$bmi<-as.numeric(data$bmi)
data$stroke<-as.factor(data$stroke)
str(data)
test1<-chisq.test(table(data$hypertension,data$heart_disease))
print(test1)
test2<-chisq.test(table(data$Residence_type,data$hypertension))
print(test2)
test3<-chisq.test(table(data$smoking_status,data$hypertension))
print(test3)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
str(data)
data$hypertension<-as.factor(data$hypertension)
data$heart_disease<-as.factor(data$heart_disease)
data$bmi<-as.numeric(data$bmi)
data$stroke<-as.factor(data$stroke)
str(data)
test1<-chisq.test(table(data$hypertension,data$heart_disease))
print(test1)
test2<-chisq.test(table(data$Residence_type,data$hypertension))
print(test2)
test3<-chisq.test(table(data$smoking_status,data$hypertension))
print(test3)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
str(data)
data$hypertension<-as.factor(data$hypertension)
data$heart_disease<-as.factor(data$heart_disease)
data$bmi<-as.numeric(data$bmi)
data$stroke<-as.factor(data$stroke)
str(data)
test1<-chisq.test(table(data$hypertension,data$heart_disease))
print(test1)
test2<-chisq.test(table(data$Residence_type,data$hypertension))
print(test2)
test3<-chisq.test(table(data$smoking_status,data$hypertension))
print(test3)
data=read.csv("C:\\Users\\Arun\\Documents\\Heartstroke_data - Copy.csv")
View(data)
str(data)
data$hypertension<-as.factor(data$hypertension)
data$heart_disease<-as.factor(data$heart_disease)
data$bmi<-as.numeric(data$bmi)
data$stroke<-as.factor(data$stroke)
str(data)
test1<-chisq.test(table(data$hypertension,data$heart_disease))
print(test1)
test2<-chisq.test(table(data$Residence_type,data$hypertension))
print(test2)
test3<-chisq.test(table(data$smoking_status,data$hypertension))
print(test3)
install.packages("car")
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="two sided",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="two.sided",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="two.sided",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="greater",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="two.side",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="greater",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="two.side",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
t.test(data$weight~data$site,alternative="lesser",mu=0,paired=FALSE,var.equal=TRUE,conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,
alternative="two.side",
mu=0,
paired=FALSE,
var.equal=TRUE,
conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,
alternative="greater",
mu=0,
paired=FALSE,
var.equal=TRUE,
conf.level=0.95)
x1<-c(16.2,25.4,21,21.1,27.7,21.6)
x2<-c(39.2,41.2,32.6,24.8,29.5,39.8)
data<-data.frame(site=rep(c("urban","rural"),
each=6),
weight=c(x1,x2))
print(data)
library(car)
leveneTest(weight~site,data)
t.test(data$weight~data$site,
alternative="less",
mu=0,
paired=FALSE,
var.equal=TRUE,
conf.level=0.95)
t.test(data$weight~data$site,
alternative="two.side",
mu=0,
paired=FALSE,
var.equal=TRUE,
conf.level=0.95)
pie<-ggplot(pc,aes(x="",y=amount,fill=factor(expense)))+
geom_bar(width=1,stat="identity")+
theme(axis.line=element_blank(),plot.title=element_text(hjust=0.5))+
labs(fill="expense",x=NULL,y=NULL,title="pie chart of expenses")
library(ggplot2)
library(dplyr)
pc=read.csv("piechart.csv")
View(pc)
#piechart
pie<-ggplot(pc,aes(x="",y=amount,fill=factor(expense)))+
geom_bar(width=1,stat="identity")+
theme(axis.line=element_blank(),plot.title=element_text(hjust=0.5))+
labs(fill="expense",x=NULL,y=NULL,title="pie chart of expenses")
pie+coord_polar(theta="y",start=0)
View(airquality)
summary(airquality)
airquality$Month=factor(airquality$Month)
summary(airquality)
print(airquality[1:5,])
mean(airquality$Temp)
quantile(airquality$Temp)
hist(airquality$Temp)
hist(airquality$Temp,breaks = 20)
par(mfrow=c(1,1))
hist(airquality$Temp,prob=T)
hist(airquality$Ozone,prob=T)
hist(airquality$Wind,prob=T)
hist(airquality$Solar.R,prob=T)
boxplot(airquality$Ozone)
boxplot(airquality$Temp)
pie<-ggplot(pc,aes(x="",y=amount,fill=factor(expense)))+
geom_bar(width=1,stat="identity")+
theme(axis.line=element_blank(),plot.title=element_text(hjust=0.5))+
labs(fill="expense",x=NULL,y=NULL,title="pie chart of expenses")
pie+coord_polar(theta="y",start=0)
library(rvest)
library(dplyr)
link='https://www.edudwar.com/top-and-best-schools-in-india/'
web=read_html(link)
library(rvest)
library(dplyr)
link='https://www.edudwar.com/top-and-best-schools-in-india/'
web=read_html(link)
library(rvest)
library(dplyr)
link='https://www.edudwar.com/top-and-best-schools-in-india/'
web=read_html(link)
